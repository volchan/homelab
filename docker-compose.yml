version: '3'

name: 'nas-tools'
services:
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - VERSION=docker
    volumes:
      - ~/plex/config:/config
      - /Volumes:/mnt/shares
    restart: unless-stopped
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - tautilli_config:/config
    ports:
      - 8181:8181
    restart: unless-stopped
    depends_on:
      - plex
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - deluge_config:/config
      - ~/Downloads:/downloads
      - /Volumes:/mnt/shares
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-conf:/etc/grafana
    ports:
      - 3000:3000
    restart: unless-stopped

  reverse-proxy:
    image: traefik:2.3
    command:
    # - '--log.level=DEBUG'
    - '--api=true'
    - '--api.dashboard=true'
    - '--providers.docker.endpoint=unix:///var/run/docker.sock'
    - '--providers.docker.swarmMode=true'
    - '--providers.docker.exposedbydefault=false'
    - '--providers.docker.network=traefik-public'
    - '--entrypoints.web.address=:80'
    - '--entrypoints.websecure.address=:443'
    - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true'
    - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web'
    - '--certificatesresolvers.letsencryptresolver.acme.email=myemail@gmail.com' # Put in your email (the email associated with your domain name)
    - '--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json'
    ports:
    - 80:80
    - 443:443
    volumes:
    - acme-certs:/letsencrypt
    - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
    - traefik-public
    deploy:
      placement:
        constraints:
        - node.role == manager
      labels:
      - 'traefik.enable=true'
      # HTTP Catchall for redirecting HTTP -> HTTPS
      - 'traefik.http.routers.http-catchall.rule=PathPrefix(`/`)'
      - 'traefik.http.routers.http-catchall.entrypoints=web'
      - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      # Traefik dashboard
      - 'traefik.http.routers.traefik.rule=(Host(`mydomain.com`) || Host(`www.mydomain.com`)) && (PathPrefix(`/traefik`) || PathPrefix(`/api`))' # Put in your domain
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      - 'traefik.http.routers.traefik.tls.certresolver=letsencryptresolver'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.services.api@internal.loadbalancer.server.port=8080' # Required in swarms, https://doc.traefik.io/traefik/v2.0/routing/providers/docker/#services
      - 'traefik.http.routers.traefik.middlewares=traefik-auth'
      - 'traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTH}' # username: admin, password: admin
      - 'traefik.http.routers.traefik.middlewares=strip'
      - 'traefik.http.middlewares.strip.stripprefix.prefixes=/traefik'

  whoami:
    image: 'traefik/whoami'
    deploy:
      labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=(Host(`mydomain.com`) || Host(`www.mydomain.com`))' # Put in your domain
      - 'traefik.http.routers.whoami.entrypoints=websecure'
      - 'traefik.http.routers.whoami.tls.certresolver=letsencryptresolver'
      - 'traefik.http.routers.whoami.service=whoamiservice'
      - 'traefik.http.services.whoamiservice.loadbalancer.server.port=80' # Required in swarms, https://doc.traefik.io/traefik/v2.0/routing/providers/docker/#services
    networks:
    - traefik-public

networks:
  traefik-public:

volumes:
  acme-certs:
  deluge_config:
  grafana-data:
  grafana-conf:
  tautilli_config:
